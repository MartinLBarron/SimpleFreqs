[{"path":"https://martinlbarron.github.io/simplefreqs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 simplefreqs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://martinlbarron.github.io/simplefreqs/articles/basic-use.html","id":"printing","dir":"Articles","previous_headings":"","what":"printing","title":"Basic Use","text":"package provides simple way produce frequency tables. built work console knitted documents (.e. Rmarkdown Quarto). correctly produce html, pdf, word output.","code":""},{"path":"https://martinlbarron.github.io/simplefreqs/articles/basic-use.html","id":"console","dir":"Articles","previous_headings":"printing","what":"Console","title":"Basic Use","text":"","code":"freq(iris, Species, markdown = F, plot = F)  Variable: Species Class: factor NAs: 0 (0.0%) ════════════════════════════════════════════════════════════         Species     Freq        %     Cum. Freq     Cum. % ────────────────────────────────────────────────────────────          setosa       50     33.3            50       33.3      versicolor       50     33.3           100       66.7       virginica       50     33.3           150      100.0 ────────────────────────────────────────────────────────────           Total      150     100%           150       100% ════════════════════════════════════════════════════════════"},{"path":"https://martinlbarron.github.io/simplefreqs/articles/basic-use.html","id":"html","dir":"Articles","previous_headings":"printing","what":"html","title":"Basic Use","text":"","code":"freq(iris, Species, markdown = T)"},{"path":"https://martinlbarron.github.io/simplefreqs/articles/basic-use.html","id":"pdf","dir":"Articles","previous_headings":"printing","what":"pdf","title":"Basic Use","text":"","code":"freq(iris, Species, markdown = T)"},{"path":"https://martinlbarron.github.io/simplefreqs/articles/basic-use.html","id":"word","dir":"Articles","previous_headings":"printing","what":"word","title":"Basic Use","text":"designed used part tidyverse pipeline. Hence, first parameter data frame (tibble) second parameter unquoted variable first parameter. Alternatively, can pass vector first parameter work . Results need printed . Instead, results can assigned variable. class “simplefreqs_freq” “data.frame”. object continue print simplefreqs_freqs. can remove “simplefreqs_freq” class needed object print regular data.frame.","code":"freq(iris, Species, markdown = T) library(dplyr) freq(iris, Species) iris |>   freq(Species) freq(iris$Species) freq(iris[[\"Species\"]]) df <- freq(iris, Species)  class(df) [1] \"simplefreqs_freq\" \"data.frame\" df <- freq(iris, Species)  df df <- freq(iris, Species)  df <- as.data.frame(df)  class(df) [1] \"data.frame\" df      Species freq proportion cum_freq cum_proportion 1     setosa   50  0.3333333       50      0.3333333 2 versicolor   50  0.3333333      100      0.6666667 3  virginica   50  0.3333333      150      1.0000000"},{"path":"https://martinlbarron.github.io/simplefreqs/articles/basic-use.html","id":"plots","dir":"Articles","previous_headings":"","what":"plots","title":"Basic Use","text":"default, simple bar chart produced alongside frequency table. Plots can optionally supressed #sort default, results sorted descending order frequency values Alternatively, sorting can turned . case, results sorted variables labels. character variables, alphabetic, factors specified levels variable.","code":"freq(iris, Species) freq(iris, Species, plot = FALSE) freq(iris, Species, sort = TRUE, plot = FALSE) freq(iris, Species, sort = FALSE, plot = FALSE)"},{"path":"https://martinlbarron.github.io/simplefreqs/articles/basic-use.html","id":"na-rm","dir":"Articles","previous_headings":"","what":"na.rm","title":"Basic Use","text":"NAs , default, included treated level variable. Alternatively, nas can removed. case, NAs printed two relevent attribute set results. “missing” include number missings removed missing_removed set TRUE. #markdown simplefreqs::freq tries intuit working interactively console knitting document. cases, may need directly specify type output want display using markdown= parameter. Set FALSE wish print console.  Set markdown = TRUE wish include knitted document. #wt Results can optionally weighted providing vector weight values.","code":"df <- iris |>   mutate(Species=ifelse(row_number()<10,NA,Species)) |>     freq(Species, na.rm = FALSE) df df <- iris |>   mutate(Species=ifelse(row_number()<10,NA,Species)) |>     freq(Species, na.rm = TRUE) df freq(iris, Species, markdown = FALSE)  Variable: Species Class: factor NAs: 0 (0.0%) ════════════════════════════════════════════════════════════         Species     Freq        %     Cum. Freq     Cum. % ────────────────────────────────────────────────────────────          setosa       50     33.3            50       33.3      versicolor       50     33.3           100       66.7       virginica       50     33.3           150      100.0 ────────────────────────────────────────────────────────────           Total      150     100%           150       100% ════════════════════════════════════════════════════════════ freq(iris, Species, markdown = TRUE) freq(iris, Species,wt=Sepal.Length)"},{"path":"https://martinlbarron.github.io/simplefreqs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Barron. Author, maintainer.","code":""},{"path":"https://martinlbarron.github.io/simplefreqs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barron M (2023). simplefreqs: Simple Frequency Tables. https://martinlbarron.github.io/simplefreqs/, https://github.com/MartinLBarron/simplefreqs.","code":"@Manual{,   title = {simplefreqs: Simple Frequency Tables},   author = {Martin Barron},   year = {2023},   note = {https://martinlbarron.github.io/simplefreqs/, https://github.com/MartinLBarron/simplefreqs}, }"},{"path":"https://martinlbarron.github.io/simplefreqs/index.html","id":"simplefreqs","dir":"","previous_headings":"","what":"Simple Frequency Tables ","title":"Simple Frequency Tables ","text":"simplefreqs package making simple (attractive) frequency tables. outputs nicely console, html, pdf, word.","code":""},{"path":"https://martinlbarron.github.io/simplefreqs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simple Frequency Tables ","text":"","code":"# Install simplefreqs from CRAN (coming soon...) # install.packages(\"simplefreqs\")  # install from GitHub using remotes: # install.packages(\"remotes\") remotes::install_github(\"MartinLBarron/simplefreqs\", build_vignettes = TRUE)  # install the development version from GitHub using remotes: # install.packages(\"remotes\") remotes::install_github(\"MartinLBarron/simplefreqs@dev\", build_vignettes = TRUE)"},{"path":"https://martinlbarron.github.io/simplefreqs/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Simple Frequency Tables ","text":"simplefreqs package contains single function, freq. basic, freq accepts data.frame variable inputs calculates resulting frequency table. can done stand-alone operation part pipeline. See basic usage vignette (vignette('basic-use', 'simplefreqs') details.","code":"# Stand-alone freq(iris, Species)  # As part of pipeline iris |>   freq(Species)"},{"path":"https://martinlbarron.github.io/simplefreqs/reference/freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct frequency table — freq","title":"Construct frequency table — freq","text":"Prints frequency table specified variable.","code":""},{"path":"https://martinlbarron.github.io/simplefreqs/reference/freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct frequency table — freq","text":"","code":"freq(   df,   var = NA,   plot = TRUE,   sort = TRUE,   markdown = !interactive(),   wt = NULL,   na.rm = FALSE )"},{"path":"https://martinlbarron.github.io/simplefreqs/reference/freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct frequency table — freq","text":"df data frame (optionally, can pass variable first argument.) var variable associated data frame plot TRUE (default) prints bar chart results.  FALSE, chart. sort TRUE (default), sort output descending order n. FALSE, sort output ascending order levels markdown false, formats table Rmarkdown/Quarto inclusion. wt variable representing weights na.rm FALSE (default) NAs included frequency list.  TRUE, NA removed (reported separately)","code":""},{"path":"https://martinlbarron.github.io/simplefreqs/reference/freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct frequency table — freq","text":"data frame containing frequencies.","code":""},{"path":"https://martinlbarron.github.io/simplefreqs/reference/freq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct frequency table — freq","text":"function constructs frequency table specified variable. expects data frame first argument (unquoted) variable second argument. thus fit tidyverse pipeline.  Alternatively, convienience, vector can passed first argument var (second) argument left blank. console printed table highly customizable using session, project, global options.  following options currently implemented can set calling `options()` either interactively including .Rprofile. - simplefreqs.inner_table_padding - simplefreqs.table_symbol - simplefreqs.row_divider_symbol - simplefreqs.print_table_symbol - simplefreqs.print_table_total_row - simplefreqs.print_table_metadata - simplefreqs.print_header_divider - simplefreqs.big_mark - simplefreqs.decimal_digits","code":""},{"path":"https://martinlbarron.github.io/simplefreqs/reference/freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct frequency table — freq","text":"","code":"freq(iris, Species, markdown = FALSE) #>  #> Variable: Species #> Class: factor #> NAs: 0 (0.0%) #> ════════════════════════════════════════════════════════════ #>         Species     Freq        %     Cum. Freq     Cum. % #> ──────────────────────────────────────────────────────────── #>          setosa       50     33.3            50       33.3 #>      versicolor       50     33.3           100       66.7 #>       virginica       50     33.3           150      100.0 #> ──────────────────────────────────────────────────────────── #>           Total      150     100%           150       100% #> ════════════════════════════════════════════════════════════"},{"path":[]},{"path":"https://martinlbarron.github.io/simplefreqs/news/index.html","id":"id_2023-0-5-0","dir":"Changelog","previous_headings":"","what":"2023-08-19","title":"simplefreqs 0.5.0","text":"Preparing CRAN submission.","code":""}]
